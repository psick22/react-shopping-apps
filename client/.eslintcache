[{"D:\\projects\\react-shopping-apps\\client\\src\\index.js":"1","D:\\projects\\react-shopping-apps\\client\\src\\serviceWorker.js":"2","D:\\projects\\react-shopping-apps\\client\\src\\components\\App.js":"3","D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\index.js":"4","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"5","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\UploadProductPage\\UploadProductPage.js":"6","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"7","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"8","D:\\projects\\react-shopping-apps\\client\\src\\hoc\\auth.js":"9","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\Footer\\Footer.js":"10","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\NavBar.js":"11","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\CartPage\\CartPage.js":"12","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\DetailProductPage\\DetailProductPage.js":"13","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Searchbox.js":"14","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Checkbox.js":"15","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Radiobox.js":"16","D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\user_reducer.js":"17","D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\FileUpload.js":"18","D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\ImageSlider.js":"19","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Datas.js":"20","D:\\projects\\react-shopping-apps\\client\\src\\_actions\\user_actions.js":"21","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"22","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"23","D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\Paypal.js":"24","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\CartPage\\Sections\\UserCartBlocks.js":"25","D:\\projects\\react-shopping-apps\\client\\src\\components\\Config.js":"26","D:\\projects\\react-shopping-apps\\client\\src\\_actions\\types.js":"27","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\HistoryPage\\HistoryPage.js":"28","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\HistoryPage\\Sections\\HistoryTable.js":"29"},{"size":1223,"mtime":1609893245702,"results":"30","hashOfConfig":"31"},{"size":5086,"mtime":1609893245702,"results":"32","hashOfConfig":"31"},{"size":2318,"mtime":1610337106019,"results":"33","hashOfConfig":"31"},{"size":164,"mtime":1609893245697,"results":"34","hashOfConfig":"31"},{"size":7030,"mtime":1609893245701,"results":"35","hashOfConfig":"31"},{"size":3130,"mtime":1610066812116,"results":"36","hashOfConfig":"31"},{"size":5291,"mtime":1609893245699,"results":"37","hashOfConfig":"31"},{"size":4418,"mtime":1610329793127,"results":"38","hashOfConfig":"31"},{"size":1499,"mtime":1609893245701,"results":"39","hashOfConfig":"31"},{"size":602,"mtime":1609893245699,"results":"40","hashOfConfig":"31"},{"size":1501,"mtime":1609893245700,"results":"41","hashOfConfig":"31"},{"size":2739,"mtime":1610336280745,"results":"42","hashOfConfig":"31"},{"size":2904,"mtime":1610329793126,"results":"43","hashOfConfig":"31"},{"size":959,"mtime":1610086557912,"results":"44","hashOfConfig":"31"},{"size":1713,"mtime":1610086100072,"results":"45","hashOfConfig":"31"},{"size":1246,"mtime":1610086077008,"results":"46","hashOfConfig":"31"},{"size":1326,"mtime":1610331791790,"results":"47","hashOfConfig":"31"},{"size":2441,"mtime":1610066812113,"results":"48","hashOfConfig":"31"},{"size":622,"mtime":1610066812113,"results":"49","hashOfConfig":"31"},{"size":734,"mtime":1610072562047,"results":"50","hashOfConfig":"31"},{"size":3182,"mtime":1610329793120,"results":"51","hashOfConfig":"31"},{"size":760,"mtime":1609893245700,"results":"52","hashOfConfig":"31"},{"size":1771,"mtime":1610329793128,"results":"53","hashOfConfig":"31"},{"size":2730,"mtime":1610329793123,"results":"54","hashOfConfig":"31"},{"size":1179,"mtime":1610329793125,"results":"55","hashOfConfig":"31"},{"size":59,"mtime":1609893245698,"results":"56","hashOfConfig":"31"},{"size":364,"mtime":1610329793120,"results":"57","hashOfConfig":"31"},{"size":526,"mtime":1610337616939,"results":"58","hashOfConfig":"31"},{"size":1417,"mtime":1610338644788,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1ot6m2p",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\projects\\react-shopping-apps\\client\\src\\index.js",[],["126","127"],"D:\\projects\\react-shopping-apps\\client\\src\\serviceWorker.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\App.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\index.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["128","129"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        lastName: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string().required(\"Name is required\"),\r\n        lastName: Yup.string().required(\"Last Name is required\"),\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Confirm Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form\r\n              style={{ minWidth: \"375px\" }}\r\n              {...formItemLayout}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Email\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.email && touched.email ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Password\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.password && touched.password ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\UploadProductPage\\UploadProductPage.js",["130"],"import React, { useState } from 'react';\r\nimport { Typography, Button, Form, Input, Select } from 'antd';\r\nimport FileUpload from '../../utils/FileUpload';\r\nimport axios from 'axios';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n  { key: 1, value: 'Africa' },\r\n  { key: 2, value: 'Europe' },\r\n  { key: 3, value: 'Asia' },\r\n  { key: 4, value: 'North America' },\r\n  { key: 5, value: 'South America' },\r\n  { key: 6, value: 'Austrailia' },\r\n  { key: 7, value: 'Antarctica' },\r\n];\r\n\r\nfunction UploadProductPage({ user, history }) {\r\n  const [Title, setTitle] = useState('');\r\n  const [Description, setDescription] = useState('');\r\n  const [Price, setPrice] = useState(0);\r\n  const [Continent, setContinent] = useState(1);\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const titleChangeHandler = e => {\r\n    setTitle(e.currentTarget.value);\r\n  };\r\n  const descriptionChangeHandler = e => {\r\n    setDescription(e.currentTarget.value);\r\n  };\r\n  const priceChangeHandler = e => {\r\n    setPrice(e.currentTarget.value);\r\n  };\r\n  const continentChangeHandler = value => {\r\n    setContinent(value);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    if (!Title || !Description || !Price || !Continent || !Images) {\r\n      return alert(' 모든 칸에 입력을 해야합니다.');\r\n    }\r\n    const body = {\r\n      // 로그인 된 사람의 아이디\r\n      writer: user.userData._id,\r\n      title: Title,\r\n      description: Description,\r\n      price: Price,\r\n      images: Images,\r\n      continents: Continents,\r\n    };\r\n\r\n    axios.post('/api/product', body).then(response => {\r\n      console.log(response);\r\n\r\n      if (response.data.success) {\r\n        alert('상품 업로드 성공');\r\n        history.push('/');\r\n      } else {\r\n        alert('상품 업로드 ');\r\n      }\r\n    });\r\n  };\r\n  const updateImages = newImages => {\r\n    setImages(newImages);\r\n  };\r\n  return (\r\n    <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <h2> 여행 상품 업로드 </h2>\r\n      </div>\r\n\r\n      <Form onFinish={submitHandler}>\r\n        {/* {Drop Zone/} */}\r\n        <FileUpload refreshFunction={updateImages} />\r\n        <br />\r\n        <br />\r\n        <label>이름</label>\r\n        <Input onChange={titleChangeHandler} value={Title} />\r\n        <br />\r\n        <br />\r\n        <label>설명</label>\r\n        <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n        <br />\r\n        <br />\r\n        <label>가격($)</label>\r\n        <Input type='number' onChange={priceChangeHandler} value={Price} />\r\n        <br />\r\n        <br />\r\n        <Select\r\n          style={{ width: 120 }}\r\n          onChange={continentChangeHandler}\r\n          value={Continent}\r\n        >\r\n          {Continents.map(item => (\r\n            <Option key={item.key} value={item.key}>\r\n              {item.value}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n        <br />\r\n        <br />\r\n        <Button htmlType='submit'>확인</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadProductPage;\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["131","132"],"import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  forgot password\r\n                  </a>\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Log in\r\n                </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["133","134","135"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Card, Row, Collapse } from 'antd';\r\nimport { RocketOutlined } from '@ant-design/icons';\r\nimport ImageSlider from '../../utils/ImageSlider';\r\nimport Checkbox from './Sections/Checkbox.js';\r\nimport Radiobox from './Sections/Radiobox.js';\r\nimport Searchbox from './Sections/Searchbox.js';\r\nimport { continents, price } from './Sections/Datas';\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction LandingPage() {\r\n  const [products, setProducts] = useState([]);\r\n  const [skip, setSkip] = useState(0);\r\n  const [limit, setLimit] = useState(8);\r\n  const [postSize, setPostSize] = useState(0);\r\n  const [filters, setFilters] = useState({\r\n    continents: [],\r\n    price: [],\r\n  });\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    let body = {\r\n      skip: skip,\r\n      limit: limit,\r\n    };\r\n    getProducts(body);\r\n  }, []);\r\n\r\n  const getProducts = body => {\r\n    axios.post('/api/product/products', body).then(response => {\r\n      if (response.data.success) {\r\n        console.log('데이터 로딩 성공');\r\n        if (body.loadMore) {\r\n          setProducts([...products, ...response.data.productInfo]);\r\n        } else {\r\n          setProducts(response.data.productInfo);\r\n        }\r\n        setPostSize(response.data.postSize);\r\n      } else {\r\n        alert('상품을 가져오는 것에 실패하였습니다.');\r\n      }\r\n    });\r\n  };\r\n\r\n  const loadMoreHandler = e => {\r\n    let moreSkip = skip + limit;\r\n\r\n    let body = {\r\n      skip: moreSkip,\r\n      limit: limit,\r\n      loadMore: true,\r\n    };\r\n    getProducts(body);\r\n    setSkip(moreSkip);\r\n  };\r\n\r\n  const renderCards = products.map((product, index) => {\r\n    // console.log('product:', product);\r\n\r\n    return (\r\n      <Col key={index} lg={6} md={8} xs={24} style={{ padding: '5px' }}>\r\n        <a href={`/product/${product._id}`}>\r\n          <Card\r\n            style={{ height: '100%' }}\r\n            cover={<ImageSlider images={product.images} />}\r\n          >\r\n            <Meta title={product.title} description={`$${product.price}`} />\r\n          </Card>\r\n        </a>\r\n      </Col>\r\n    );\r\n  });\r\n  const showFilteredResults = filter => {\r\n    // filter 는 {category : [id, id,,,]} 의 오브젝트로 들어옴\r\n    // 불러온 데이터에서 category 가 해당 id와 일치하는 데이터만 불러옴 (getProducts)\r\n\r\n    let body = {\r\n      skip: 0,\r\n      limit: limit,\r\n      loadMore: false,\r\n      filters: filter,\r\n    };\r\n    setSkip(0);\r\n    getProducts(body);\r\n  };\r\n\r\n  const handleFilters = (filter, category) => {\r\n    const newFilters = { ...filters };\r\n    console.log('newFilters', newFilters);\r\n    newFilters[category] = [...filter];\r\n    console.log('newFilters, price필터 추가', newFilters);\r\n\r\n    console.log('필터', filter);\r\n    console.log('뉴필터', newFilters);\r\n\r\n    showFilteredResults(newFilters);\r\n\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  const doSearch = string => {\r\n    console.log('doSearch :', string);\r\n    const newSearchInput = string;\r\n    console.log('state) searchInput :', searchInput);\r\n    let body = {\r\n      skip: 0,\r\n      limit: limit,\r\n      filters: filters,\r\n      searchString: newSearchInput,\r\n    };\r\n    setSkip(0);\r\n    setSearchInput(newSearchInput);\r\n\r\n    getProducts(body);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '75%', margin: '3rem auto' }}>\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h2>\r\n          DAPANDA <RocketOutlined />\r\n        </h2>\r\n      </div>\r\n      {/* Filter */}\r\n      <Row gutter={[16, 16]}>\r\n        <Col lg={12} xs={24}>\r\n          <Checkbox\r\n            continents={continents}\r\n            handleFilters={filter => handleFilters(filter, 'continents')}\r\n          ></Checkbox>\r\n        </Col>\r\n        <Col lg={12} xs={24}>\r\n          <Radiobox\r\n            price={price}\r\n            handleFilters={filter => handleFilters(filter, 'price')}\r\n          ></Radiobox>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Search */}\r\n\r\n      <Searchbox doSearch={string => doSearch(string)}></Searchbox>\r\n\r\n      {/* Cards */}\r\n      <Row gutter={(16, 16)}>{renderCards}</Row>\r\n\r\n      {postSize >= limit && (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <button onClick={loadMoreHandler}>더보기</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","D:\\projects\\react-shopping-apps\\client\\src\\hoc\\auth.js",["136"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\Footer\\Footer.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\CartPage\\CartPage.js",["137","138","139"],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\DetailProductPage\\DetailProductPage.js",["140","141"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport { Row, Col, Descriptions, Badge, Button } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../../_actions/user_actions';\r\n\r\nfunction DetailProductPage({ match }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [product, setProduct] = useState({});\r\n  const [images, setImages] = useState([]);\r\n\r\n  const productID = match.params.productID;\r\n\r\n  const onClickHandler = e => {\r\n    // Add to Cart 버튼을 클릭하면 필요한 정보를 user 데이터스키마에 전달 (cart와 histroy 필드)\r\n    // 상품 아이디, 갯수, 넣은 날짜\r\n    // user 스키마에 관련 된 것은 redux를 이용했기 때문에 이 부분도 redux로 처리\r\n    console.log(e);\r\n    console.log('product._id:', product._id);\r\n\r\n    // useDispatch로 액션을 실행하며 상품 아이디를 전달\r\n    dispatch(addToCart(product._id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/product/products_by_id?id=${productID}&type=single`)\r\n      .then(response => {\r\n        setProduct(response.data[0]);\r\n        const newImage = response.data[0].images;\r\n        const imageList = newImage.map(image => {\r\n          const obj = {\r\n            original: image,\r\n            thumbnail: image,\r\n          };\r\n          return obj;\r\n        });\r\n        setImages(imageList);\r\n      })\r\n      .catch(err => alert(err));\r\n  }, []);\r\n\r\n  console.log('state:', images);\r\n\r\n  return (\r\n    <div style={{ width: '100%', padding: '3rem 4rem' }}>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <h1>{product.title}</h1>\r\n      </div>\r\n      <br />\r\n      <Row gutter={[16, 16]}>\r\n        <Col lg={12} sm={24}>\r\n          <ImageGallery items={images} />\r\n        </Col>\r\n        <Col lg={12} sm={24}>\r\n          <div>\r\n            <Descriptions title='상품 정보' bordered>\r\n              <Descriptions.Item label='Price'>\r\n                {`$ ${product.price}`}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Sold'>{product.sold}</Descriptions.Item>\r\n              <Descriptions.Item label='Views'>\r\n                {product.views}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Description'>\r\n                {product.description}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <Button\r\n                type='danger'\r\n                shape='round'\r\n                size='large'\r\n                onClick={onClickHandler}\r\n              >\r\n                장바구니 담기\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailProductPage;\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Searchbox.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Checkbox.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Radiobox.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\user_reducer.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\FileUpload.js",["142","143"],"import React, { useEffect, useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nfunction FileUpload({ refreshFunction }) {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const dropHandler = files => {\r\n    let formData = new FormData();\r\n\r\n    const config = {\r\n      header: { 'content-type': 'multipart/form-data' },\r\n    };\r\n    formData.append('file', files[0]);\r\n    formData.append('upload_preset', 'fhjlucmt');\r\n\r\n    axios.post('/api/product/image', formData, config).then(response => {\r\n      if (response.data.success) {\r\n        const newImages = [...Images, response.data.filePath];\r\n        setImages(newImages);\r\n        refreshFunction(newImages);\r\n      } else {\r\n        alert('파일 저장 실패');\r\n      }\r\n    });\r\n  };\r\n\r\n  const onClickDelete = index => {\r\n    const newImages = [...Images];\r\n    newImages.splice(index, 1);\r\n    setImages(newImages);\r\n    refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n      <Dropzone onDrop={dropHandler}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section>\r\n            <div\r\n              style={{\r\n                width: 300,\r\n                height: 240,\r\n                border: '1px solid lightgray',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n              {...getRootProps()}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <div>\r\n                <PlusOutlined\r\n                  style={{ fontSize: '2.5rem', color: 'darkgray' }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          width: '350px',\r\n          height: '240px',\r\n          overflowX: 'scroll',\r\n          overflowY: 'hidden',\r\n        }}\r\n      >\r\n        {Images.map((item, index) => (\r\n          <img\r\n            key={index}\r\n            style={{\r\n              minWidth: '300px',\r\n              width: '300px',\r\n              height: '240px',\r\n              margin: '0px 20px',\r\n            }}\r\n            src={item}\r\n            onClick={() => onClickDelete(index)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\ImageSlider.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Datas.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\_actions\\user_actions.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\Paypal.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\CartPage\\Sections\\UserCartBlocks.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\Config.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\_actions\\types.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\HistoryPage\\HistoryPage.js",["144","145","146","147","148"],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\HistoryPage\\Sections\\HistoryTable.js",["149","150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":84,"column":11,"nodeType":"157","messageId":"158","endLine":84,"endColumn":16},{"ruleId":"155","severity":1,"message":"159","line":89,"column":11,"nodeType":"157","messageId":"158","endLine":89,"endColumn":22},{"ruleId":"155","severity":1,"message":"160","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":20},{"ruleId":"155","severity":1,"message":"156","line":75,"column":11,"nodeType":"157","messageId":"158","endLine":75,"endColumn":16},{"ruleId":"155","severity":1,"message":"159","line":80,"column":11,"nodeType":"157","messageId":"158","endLine":80,"endColumn":22},{"ruleId":"155","severity":1,"message":"161","line":3,"column":26,"nodeType":"157","messageId":"158","endLine":3,"endColumn":34},{"ruleId":"155","severity":1,"message":"162","line":16,"column":17,"nodeType":"157","messageId":"158","endLine":16,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":30,"column":6,"nodeType":"165","endLine":30,"endColumn":8,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":6,"column":1,"nodeType":"169","endLine":42,"endColumn":2},{"ruleId":"155","severity":1,"message":"170","line":2,"column":25,"nodeType":"157","messageId":"158","endLine":2,"endColumn":31},{"ruleId":"171","severity":1,"message":"172","line":33,"column":28,"nodeType":"173","messageId":"174","endLine":33,"endColumn":30},{"ruleId":"163","severity":1,"message":"175","line":72,"column":6,"nodeType":"165","endLine":72,"endColumn":27,"suggestions":"176"},{"ruleId":"155","severity":1,"message":"177","line":4,"column":34,"nodeType":"157","messageId":"158","endLine":4,"endColumn":39},{"ruleId":"163","severity":1,"message":"178","line":43,"column":6,"nodeType":"165","endLine":43,"endColumn":8,"suggestions":"179"},{"ruleId":"155","severity":1,"message":"180","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":26},{"ruleId":"181","severity":1,"message":"182","line":73,"column":11,"nodeType":"183","endLine":83,"endColumn":13},{"ruleId":"155","severity":1,"message":"184","line":1,"column":28,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"185","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":13},{"ruleId":"155","severity":1,"message":"186","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":15},{"ruleId":"155","severity":1,"message":"187","line":3,"column":17,"nodeType":"157","messageId":"158","endLine":3,"endColumn":20},{"ruleId":"155","severity":1,"message":"188","line":3,"column":22,"nodeType":"157","messageId":"158","endLine":3,"endColumn":27},{"ruleId":"155","severity":1,"message":"187","line":2,"column":17,"nodeType":"157","messageId":"158","endLine":2,"endColumn":20},{"ruleId":"155","severity":1,"message":"188","line":2,"column":22,"nodeType":"157","messageId":"158","endLine":2,"endColumn":27},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'dirty' is assigned a value but never used.","Identifier","unusedVar","'handleReset' is assigned a value but never used.","'Typography' is defined but never used.","'Collapse' is defined but never used.","'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProducts', 'limit', and 'skip'. Either include them or remove the dependency array.","ArrayExpression",["191"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'calculateTotal' and 'dispatch'. Either include them or remove the dependency array.",["192"],"'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'productID'. Either include it or remove the dependency array.",["193"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'axios' is defined but never used.","'Table' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [getProducts, limit, skip]",{"range":"200","text":"201"},"Update the dependencies array to be: [calculateTotal, dispatch, props.user.userData]",{"range":"202","text":"203"},"Update the dependencies array to be: [productID]",{"range":"204","text":"205"},[931,933],"[getProducts, limit, skip]",[2019,2040],"[calculateTotal, dispatch, props.user.userData]",[1353,1355],"[productID]"]