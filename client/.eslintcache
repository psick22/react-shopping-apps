[{"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\index.js":"1","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\serviceWorker.js":"2","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\App.js":"3","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_reducers\\index.js":"4","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"5","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"6","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"7","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\hoc\\auth.js":"8","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\NavBar.js":"9","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\Footer\\Footer.js":"10","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_reducers\\user_reducer.js":"11","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_actions\\user_actions.js":"12","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"13","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"14","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\Config.js":"15","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_actions\\types.js":"16","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\UploadProductPage\\UploadProductPage.js":"17","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\utils\\FileUpload.js":"18"},{"size":1187,"mtime":1596763589000,"results":"19","hashOfConfig":"20"},{"size":4951,"mtime":1596763589000,"results":"21","hashOfConfig":"20"},{"size":1257,"mtime":1609856887832,"results":"22","hashOfConfig":"20"},{"size":157,"mtime":1596763589000,"results":"23","hashOfConfig":"20"},{"size":5141,"mtime":1596763589000,"results":"24","hashOfConfig":"20"},{"size":331,"mtime":1609853256938,"results":"25","hashOfConfig":"20"},{"size":6805,"mtime":1609852814607,"results":"26","hashOfConfig":"20"},{"size":1455,"mtime":1596763589000,"results":"27","hashOfConfig":"20"},{"size":1442,"mtime":1609850837970,"results":"28","hashOfConfig":"20"},{"size":576,"mtime":1609853246437,"results":"29","hashOfConfig":"20"},{"size":533,"mtime":1596763589000,"results":"30","hashOfConfig":"20"},{"size":1034,"mtime":1596763589000,"results":"31","hashOfConfig":"20"},{"size":1201,"mtime":1609856939217,"results":"32","hashOfConfig":"20"},{"size":734,"mtime":1609851657015,"results":"33","hashOfConfig":"20"},{"size":57,"mtime":1596763589000,"results":"34","hashOfConfig":"20"},{"size":166,"mtime":1596763589000,"results":"35","hashOfConfig":"20"},{"size":2264,"mtime":1609863478628,"results":"36","hashOfConfig":"20"},{"size":121,"mtime":1609863485104,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"clb8se",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\index.js",[],["79","80"],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\serviceWorker.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\App.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_reducers\\index.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["81","82"],"import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\LandingPage.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["83","84"],"import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Input, Button } from \"antd\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        lastName: \"\",\n        name: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().required(\"Name is required\"),\n        lastName: Yup.string().required(\"Last Name is required\"),\n        email: Yup.string()\n          .email(\"Email is invalid\")\n          .required(\"Email is required\"),\n        password: Yup.string()\n          .min(6, \"Password must be at least 6 characters\")\n          .required(\"Password is required\"),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n          .required(\"Confirm Password is required\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\n          };\n\n          dispatch(registerUser(dataToSubmit)).then((response) => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg);\n            }\n          });\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form\n              style={{ minWidth: \"375px\" }}\n              {...formItemLayout}\n              onSubmit={handleSubmit}\n            >\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Email\"\n                hasFeedback\n                validateStatus={\n                  errors.email && touched.email ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Password\"\n                hasFeedback\n                validateStatus={\n                  errors.password && touched.password ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button\n                  onClick={handleSubmit}\n                  type=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default RegisterPage;\n","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\hoc\\auth.js",["85"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\Footer\\Footer.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_reducers\\user_reducer.js",["86"],"import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\Config.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_actions\\types.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\UploadProductPage\\UploadProductPage.js",["87","88","89"],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\utils\\FileUpload.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":75,"column":11,"nodeType":"96","messageId":"97","endLine":75,"endColumn":16},{"ruleId":"94","severity":1,"message":"98","line":80,"column":11,"nodeType":"96","messageId":"97","endLine":80,"endColumn":22},{"ruleId":"94","severity":1,"message":"95","line":84,"column":11,"nodeType":"96","messageId":"97","endLine":84,"endColumn":16},{"ruleId":"94","severity":1,"message":"98","line":89,"column":11,"nodeType":"96","messageId":"97","endLine":89,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":6,"column":1,"nodeType":"101","endLine":42,"endColumn":2},{"ruleId":"99","severity":1,"message":"100","line":9,"column":1,"nodeType":"101","endLine":22,"endColumn":2},{"ruleId":"94","severity":1,"message":"102","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":20},{"ruleId":"94","severity":1,"message":"103","line":23,"column":10,"nodeType":"96","messageId":"97","endLine":23,"endColumn":15},{"ruleId":"94","severity":1,"message":"104","line":23,"column":17,"nodeType":"96","messageId":"97","endLine":23,"endColumn":25},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'dirty' is assigned a value but never used.","Identifier","unusedVar","'handleReset' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Typography' is defined but never used.","'Image' is assigned a value but never used.","'setImage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]