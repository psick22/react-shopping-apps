[{"D:\\projects\\react-shopping-apps\\client\\src\\index.js":"1","D:\\projects\\react-shopping-apps\\client\\src\\serviceWorker.js":"2","D:\\projects\\react-shopping-apps\\client\\src\\components\\App.js":"3","D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\index.js":"4","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"5","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"6","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"7","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\UploadProductPage\\UploadProductPage.js":"8","D:\\projects\\react-shopping-apps\\client\\src\\hoc\\auth.js":"9","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\NavBar.js":"10","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\Footer\\Footer.js":"11","D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\user_reducer.js":"12","D:\\projects\\react-shopping-apps\\client\\src\\_actions\\user_actions.js":"13","D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\FileUpload.js":"14","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"15","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"16","D:\\projects\\react-shopping-apps\\client\\src\\components\\Config.js":"17","D:\\projects\\react-shopping-apps\\client\\src\\_actions\\types.js":"18"},{"size":1223,"mtime":1609893245702,"results":"19","hashOfConfig":"20"},{"size":5086,"mtime":1609893245702,"results":"21","hashOfConfig":"20"},{"size":1294,"mtime":1609893245698,"results":"22","hashOfConfig":"20"},{"size":164,"mtime":1609893245697,"results":"23","hashOfConfig":"20"},{"size":1710,"mtime":1609923828669,"results":"24","hashOfConfig":"20"},{"size":5291,"mtime":1609893245699,"results":"25","hashOfConfig":"20"},{"size":7030,"mtime":1609893245701,"results":"26","hashOfConfig":"20"},{"size":3188,"mtime":1609919160408,"results":"27","hashOfConfig":"20"},{"size":1499,"mtime":1609893245701,"results":"28","hashOfConfig":"20"},{"size":1501,"mtime":1609893245700,"results":"29","hashOfConfig":"20"},{"size":602,"mtime":1609893245699,"results":"30","hashOfConfig":"20"},{"size":554,"mtime":1609893245698,"results":"31","hashOfConfig":"20"},{"size":1083,"mtime":1609893245697,"results":"32","hashOfConfig":"20"},{"size":2454,"mtime":1609916738470,"results":"33","hashOfConfig":"20"},{"size":760,"mtime":1609893245700,"results":"34","hashOfConfig":"20"},{"size":1248,"mtime":1609893245700,"results":"35","hashOfConfig":"20"},{"size":59,"mtime":1609893245698,"results":"36","hashOfConfig":"20"},{"size":170,"mtime":1609893245697,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ot6m2p",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\projects\\react-shopping-apps\\client\\src\\index.js",[],["79","80"],"D:\\projects\\react-shopping-apps\\client\\src\\serviceWorker.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\App.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\index.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["81"],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["82","83"],"import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  forgot password\r\n                  </a>\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Log in\r\n                </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["84","85"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        lastName: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string().required(\"Name is required\"),\r\n        lastName: Yup.string().required(\"Last Name is required\"),\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Confirm Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form\r\n              style={{ minWidth: \"375px\" }}\r\n              {...formItemLayout}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Email\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.email && touched.email ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Password\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.password && touched.password ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\UploadProductPage\\UploadProductPage.js",["86"],"D:\\projects\\react-shopping-apps\\client\\src\\hoc\\auth.js",["87"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\Footer\\Footer.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\user_reducer.js",["88"],"import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\projects\\react-shopping-apps\\client\\src\\_actions\\user_actions.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\FileUpload.js",["89","90"],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\Config.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\_actions\\types.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":16},{"ruleId":"95","severity":1,"message":"99","line":75,"column":11,"nodeType":"97","messageId":"98","endLine":75,"endColumn":16},{"ruleId":"95","severity":1,"message":"100","line":80,"column":11,"nodeType":"97","messageId":"98","endLine":80,"endColumn":22},{"ruleId":"95","severity":1,"message":"99","line":84,"column":11,"nodeType":"97","messageId":"98","endLine":84,"endColumn":16},{"ruleId":"95","severity":1,"message":"100","line":89,"column":11,"nodeType":"97","messageId":"98","endLine":89,"endColumn":22},{"ruleId":"95","severity":1,"message":"101","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":6,"column":1,"nodeType":"104","endLine":42,"endColumn":2},{"ruleId":"102","severity":1,"message":"103","line":9,"column":1,"nodeType":"104","endLine":22,"endColumn":2},{"ruleId":"95","severity":1,"message":"105","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":73,"column":11,"nodeType":"108","endLine":83,"endColumn":13},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'FaCode' is defined but never used.","Identifier","unusedVar","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'Typography' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]