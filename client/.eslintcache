[{"D:\\projects\\react-shopping-apps\\client\\src\\index.js":"1","D:\\projects\\react-shopping-apps\\client\\src\\serviceWorker.js":"2","D:\\projects\\react-shopping-apps\\client\\src\\components\\App.js":"3","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"4","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"5","D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\index.js":"6","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"7","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\UploadProductPage\\UploadProductPage.js":"8","D:\\projects\\react-shopping-apps\\client\\src\\hoc\\auth.js":"9","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\NavBar.js":"10","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\Footer\\Footer.js":"11","D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\user_reducer.js":"12","D:\\projects\\react-shopping-apps\\client\\src\\_actions\\user_actions.js":"13","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Checkbox.js":"14","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Datas.js":"15","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"16","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"17","D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\ImageSlider.js":"18","D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\FileUpload.js":"19","D:\\projects\\react-shopping-apps\\client\\src\\components\\Config.js":"20","D:\\projects\\react-shopping-apps\\client\\src\\_actions\\types.js":"21","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Radiobox.js":"22","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Searchbox.js":"23"},{"size":1223,"mtime":1609893245702,"results":"24","hashOfConfig":"25"},{"size":5086,"mtime":1609893245702,"results":"26","hashOfConfig":"25"},{"size":1294,"mtime":1609893245698,"results":"27","hashOfConfig":"25"},{"size":7030,"mtime":1609893245701,"results":"28","hashOfConfig":"25"},{"size":5291,"mtime":1609893245699,"results":"29","hashOfConfig":"25"},{"size":164,"mtime":1609893245697,"results":"30","hashOfConfig":"25"},{"size":4334,"mtime":1610083475940,"results":"31","hashOfConfig":"25"},{"size":3130,"mtime":1610066812116,"results":"32","hashOfConfig":"25"},{"size":1499,"mtime":1609893245701,"results":"33","hashOfConfig":"25"},{"size":1501,"mtime":1609893245700,"results":"34","hashOfConfig":"25"},{"size":602,"mtime":1609893245699,"results":"35","hashOfConfig":"25"},{"size":554,"mtime":1609893245698,"results":"36","hashOfConfig":"25"},{"size":1083,"mtime":1609893245697,"results":"37","hashOfConfig":"25"},{"size":1725,"mtime":1610068865366,"results":"38","hashOfConfig":"25"},{"size":734,"mtime":1610072562047,"results":"39","hashOfConfig":"25"},{"size":1248,"mtime":1609893245700,"results":"40","hashOfConfig":"25"},{"size":760,"mtime":1609893245700,"results":"41","hashOfConfig":"25"},{"size":622,"mtime":1610066812113,"results":"42","hashOfConfig":"25"},{"size":2441,"mtime":1610066812113,"results":"43","hashOfConfig":"25"},{"size":59,"mtime":1609893245698,"results":"44","hashOfConfig":"25"},{"size":170,"mtime":1609893245697,"results":"45","hashOfConfig":"25"},{"size":1249,"mtime":1610072766539,"results":"46","hashOfConfig":"25"},{"size":800,"mtime":1610082376018,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1ot6m2p",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\react-shopping-apps\\client\\src\\index.js",[],["101","102"],"D:\\projects\\react-shopping-apps\\client\\src\\serviceWorker.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\App.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["103","104"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        lastName: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string().required(\"Name is required\"),\r\n        lastName: Yup.string().required(\"Last Name is required\"),\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Confirm Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form\r\n              style={{ minWidth: \"375px\" }}\r\n              {...formItemLayout}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Email\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.email && touched.email ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Password\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.password && touched.password ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["105","106"],"import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  forgot password\r\n                  </a>\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Log in\r\n                </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\index.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["107","108","109"],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\UploadProductPage\\UploadProductPage.js",["110"],"import React, { useState } from 'react';\r\nimport { Typography, Button, Form, Input, Select } from 'antd';\r\nimport FileUpload from '../../utils/FileUpload';\r\nimport axios from 'axios';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n  { key: 1, value: 'Africa' },\r\n  { key: 2, value: 'Europe' },\r\n  { key: 3, value: 'Asia' },\r\n  { key: 4, value: 'North America' },\r\n  { key: 5, value: 'South America' },\r\n  { key: 6, value: 'Austrailia' },\r\n  { key: 7, value: 'Antarctica' },\r\n];\r\n\r\nfunction UploadProductPage({ user, history }) {\r\n  const [Title, setTitle] = useState('');\r\n  const [Description, setDescription] = useState('');\r\n  const [Price, setPrice] = useState(0);\r\n  const [Continent, setContinent] = useState(1);\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const titleChangeHandler = e => {\r\n    setTitle(e.currentTarget.value);\r\n  };\r\n  const descriptionChangeHandler = e => {\r\n    setDescription(e.currentTarget.value);\r\n  };\r\n  const priceChangeHandler = e => {\r\n    setPrice(e.currentTarget.value);\r\n  };\r\n  const continentChangeHandler = value => {\r\n    setContinent(value);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    if (!Title || !Description || !Price || !Continent || !Images) {\r\n      return alert(' 모든 칸에 입력을 해야합니다.');\r\n    }\r\n    const body = {\r\n      // 로그인 된 사람의 아이디\r\n      writer: user.userData._id,\r\n      title: Title,\r\n      description: Description,\r\n      price: Price,\r\n      images: Images,\r\n      continents: Continents,\r\n    };\r\n\r\n    axios.post('/api/product', body).then(response => {\r\n      console.log(response);\r\n\r\n      if (response.data.success) {\r\n        alert('상품 업로드 성공');\r\n        history.push('/');\r\n      } else {\r\n        alert('상품 업로드 ');\r\n      }\r\n    });\r\n  };\r\n  const updateImages = newImages => {\r\n    setImages(newImages);\r\n  };\r\n  return (\r\n    <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <h2> 여행 상품 업로드 </h2>\r\n      </div>\r\n\r\n      <Form onFinish={submitHandler}>\r\n        {/* {Drop Zone/} */}\r\n        <FileUpload refreshFunction={updateImages} />\r\n        <br />\r\n        <br />\r\n        <label>이름</label>\r\n        <Input onChange={titleChangeHandler} value={Title} />\r\n        <br />\r\n        <br />\r\n        <label>설명</label>\r\n        <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n        <br />\r\n        <br />\r\n        <label>가격($)</label>\r\n        <Input type='number' onChange={priceChangeHandler} value={Price} />\r\n        <br />\r\n        <br />\r\n        <Select\r\n          style={{ width: 120 }}\r\n          onChange={continentChangeHandler}\r\n          value={Continent}\r\n        >\r\n          {Continents.map(item => (\r\n            <Option key={item.key} value={item.key}>\r\n              {item.value}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n        <br />\r\n        <br />\r\n        <Button htmlType='submit'>확인</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadProductPage;\r\n","D:\\projects\\react-shopping-apps\\client\\src\\hoc\\auth.js",["111"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\Footer\\Footer.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\_reducers\\user_reducer.js",["112"],"import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\projects\\react-shopping-apps\\client\\src\\_actions\\user_actions.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Checkbox.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Datas.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\ImageSlider.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\utils\\FileUpload.js",["113","114"],"import React, { useEffect, useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nfunction FileUpload({ refreshFunction }) {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const dropHandler = files => {\r\n    let formData = new FormData();\r\n\r\n    const config = {\r\n      header: { 'content-type': 'multipart/form-data' },\r\n    };\r\n    formData.append('file', files[0]);\r\n    formData.append('upload_preset', 'fhjlucmt');\r\n\r\n    axios.post('/api/product/image', formData, config).then(response => {\r\n      if (response.data.success) {\r\n        const newImages = [...Images, response.data.filePath];\r\n        setImages(newImages);\r\n        refreshFunction(newImages);\r\n      } else {\r\n        alert('파일 저장 실패');\r\n      }\r\n    });\r\n  };\r\n\r\n  const onClickDelete = index => {\r\n    const newImages = [...Images];\r\n    newImages.splice(index, 1);\r\n    setImages(newImages);\r\n    refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n      <Dropzone onDrop={dropHandler}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section>\r\n            <div\r\n              style={{\r\n                width: 300,\r\n                height: 240,\r\n                border: '1px solid lightgray',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n              {...getRootProps()}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <div>\r\n                <PlusOutlined\r\n                  style={{ fontSize: '2.5rem', color: 'darkgray' }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          width: '350px',\r\n          height: '240px',\r\n          overflowX: 'scroll',\r\n          overflowY: 'hidden',\r\n        }}\r\n      >\r\n        {Images.map((item, index) => (\r\n          <img\r\n            key={index}\r\n            style={{\r\n              minWidth: '300px',\r\n              width: '300px',\r\n              height: '240px',\r\n              margin: '0px 20px',\r\n            }}\r\n            src={item}\r\n            onClick={() => onClickDelete(index)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","D:\\projects\\react-shopping-apps\\client\\src\\components\\Config.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\_actions\\types.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Radiobox.js",[],"D:\\projects\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Searchbox.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":84,"column":11,"nodeType":"121","messageId":"122","endLine":84,"endColumn":16},{"ruleId":"119","severity":1,"message":"123","line":89,"column":11,"nodeType":"121","messageId":"122","endLine":89,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":75,"column":11,"nodeType":"121","messageId":"122","endLine":75,"endColumn":16},{"ruleId":"119","severity":1,"message":"123","line":80,"column":11,"nodeType":"121","messageId":"122","endLine":80,"endColumn":22},{"ruleId":"119","severity":1,"message":"124","line":3,"column":26,"nodeType":"121","messageId":"122","endLine":3,"endColumn":34},{"ruleId":"119","severity":1,"message":"125","line":16,"column":17,"nodeType":"121","messageId":"122","endLine":16,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":30,"column":6,"nodeType":"128","endLine":30,"endColumn":8,"suggestions":"129"},{"ruleId":"119","severity":1,"message":"130","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":20},{"ruleId":"131","severity":1,"message":"132","line":6,"column":1,"nodeType":"133","endLine":42,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":9,"column":1,"nodeType":"133","endLine":22,"endColumn":2},{"ruleId":"119","severity":1,"message":"134","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":73,"column":11,"nodeType":"137","endLine":83,"endColumn":13},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'dirty' is assigned a value but never used.","Identifier","unusedVar","'handleReset' is assigned a value but never used.","'Collapse' is defined but never used.","'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProducts', 'limit', and 'skip'. Either include them or remove the dependency array.","ArrayExpression",["140"],"'Typography' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [getProducts, limit, skip]",{"range":"143","text":"144"},[931,933],"[getProducts, limit, skip]"]