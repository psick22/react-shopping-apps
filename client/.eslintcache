[{"/Users/kirok/projects/playground/react-shopping-apps/client/src/index.js":"1","/Users/kirok/projects/playground/react-shopping-apps/client/src/serviceWorker.js":"2","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/App.js":"3","/Users/kirok/projects/playground/react-shopping-apps/client/src/_reducers/index.js":"4","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LoginPage/LoginPage.js":"5","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/RegisterPage/RegisterPage.js":"6","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LandingPage/LandingPage.js":"7","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/UploadProductPage/UploadProductPage.js":"8","/Users/kirok/projects/playground/react-shopping-apps/client/src/hoc/auth.js":"9","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/NavBar/NavBar.js":"10","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/Footer/Footer.js":"11","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/CartPage/CartPage.js":"12","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/HistoryPage/HistoryPage.js":"13","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/DetailProductPage/DetailProductPage.js":"14","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LandingPage/Sections/Searchbox.js":"15","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LandingPage/Sections/Radiobox.js":"16","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LandingPage/Sections/Checkbox.js":"17","/Users/kirok/projects/playground/react-shopping-apps/client/src/_reducers/user_reducer.js":"18","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LandingPage/Sections/Datas.js":"19","/Users/kirok/projects/playground/react-shopping-apps/client/src/_actions/user_actions.js":"20","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/utils/ImageSlider.js":"21","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/utils/FileUpload.js":"22","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/utils/Paypal.js":"23","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/NavBar/Sections/RightMenu.js":"24","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/NavBar/Sections/LeftMenu.js":"25","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/CartPage/Sections/UserCartBlocks.js":"26","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/HistoryPage/Sections/HistoryTable.js":"27","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/Config.js":"28","/Users/kirok/projects/playground/react-shopping-apps/client/src/_actions/types.js":"29"},{"size":1187,"mtime":1613970737654,"results":"30","hashOfConfig":"31"},{"size":4951,"mtime":1613970737654,"results":"32","hashOfConfig":"31"},{"size":2260,"mtime":1613970737651,"results":"33","hashOfConfig":"31"},{"size":157,"mtime":1613970737651,"results":"34","hashOfConfig":"31"},{"size":5141,"mtime":1613970737653,"results":"35","hashOfConfig":"31"},{"size":6805,"mtime":1613970737653,"results":"36","hashOfConfig":"31"},{"size":4259,"mtime":1613970737652,"results":"37","hashOfConfig":"31"},{"size":3021,"mtime":1613970737654,"results":"38","hashOfConfig":"31"},{"size":1455,"mtime":1613970737654,"results":"39","hashOfConfig":"31"},{"size":1442,"mtime":1613970737653,"results":"40","hashOfConfig":"31"},{"size":576,"mtime":1613970737652,"results":"41","hashOfConfig":"31"},{"size":2641,"mtime":1613970737652,"results":"42","hashOfConfig":"31"},{"size":505,"mtime":1613970737652,"results":"43","hashOfConfig":"31"},{"size":2812,"mtime":1613970737652,"results":"44","hashOfConfig":"31"},{"size":916,"mtime":1613970737653,"results":"45","hashOfConfig":"31"},{"size":1196,"mtime":1613970737653,"results":"46","hashOfConfig":"31"},{"size":1657,"mtime":1613970737653,"results":"47","hashOfConfig":"31"},{"size":1272,"mtime":1613970737651,"results":"48","hashOfConfig":"31"},{"size":713,"mtime":1613970737653,"results":"49","hashOfConfig":"31"},{"size":3051,"mtime":1613970737651,"results":"50","hashOfConfig":"31"},{"size":595,"mtime":1613970737651,"results":"51","hashOfConfig":"31"},{"size":2351,"mtime":1613970737651,"results":"52","hashOfConfig":"31"},{"size":2669,"mtime":1613970737651,"results":"53","hashOfConfig":"31"},{"size":1709,"mtime":1613970737653,"results":"54","hashOfConfig":"31"},{"size":734,"mtime":1613970737653,"results":"55","hashOfConfig":"31"},{"size":1128,"mtime":1613970737652,"results":"56","hashOfConfig":"31"},{"size":1350,"mtime":1613970737652,"results":"57","hashOfConfig":"31"},{"size":57,"mtime":1613970737651,"results":"58","hashOfConfig":"31"},{"size":356,"mtime":1613970737651,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"sm646c",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kirok/projects/playground/react-shopping-apps/client/src/index.js",[],["129","130"],"/Users/kirok/projects/playground/react-shopping-apps/client/src/serviceWorker.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/App.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/_reducers/index.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LoginPage/LoginPage.js",["131","132"],"import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/RegisterPage/RegisterPage.js",["133","134"],"import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Input, Button } from \"antd\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        lastName: \"\",\n        name: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().required(\"Name is required\"),\n        lastName: Yup.string().required(\"Last Name is required\"),\n        email: Yup.string()\n          .email(\"Email is invalid\")\n          .required(\"Email is required\"),\n        password: Yup.string()\n          .min(6, \"Password must be at least 6 characters\")\n          .required(\"Password is required\"),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n          .required(\"Confirm Password is required\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\n          };\n\n          dispatch(registerUser(dataToSubmit)).then((response) => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg);\n            }\n          });\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form\n              style={{ minWidth: \"375px\" }}\n              {...formItemLayout}\n              onSubmit={handleSubmit}\n            >\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Email\"\n                hasFeedback\n                validateStatus={\n                  errors.email && touched.email ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Password\"\n                hasFeedback\n                validateStatus={\n                  errors.password && touched.password ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button\n                  onClick={handleSubmit}\n                  type=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default RegisterPage;\n","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LandingPage/LandingPage.js",["135","136","137"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Col, Card, Row, Collapse } from 'antd';\nimport { RocketOutlined } from '@ant-design/icons';\nimport ImageSlider from '../../utils/ImageSlider';\nimport Checkbox from './Sections/Checkbox.js';\nimport Radiobox from './Sections/Radiobox.js';\nimport Searchbox from './Sections/Searchbox.js';\nimport { continents, price } from './Sections/Datas';\n\nconst { Meta } = Card;\n\nfunction LandingPage() {\n  const [products, setProducts] = useState([]);\n  const [skip, setSkip] = useState(0);\n  const [limit, setLimit] = useState(8);\n  const [postSize, setPostSize] = useState(0);\n  const [filters, setFilters] = useState({\n    continents: [],\n    price: [],\n  });\n  const [searchInput, setSearchInput] = useState('');\n\n  useEffect(() => {\n    let body = {\n      skip: skip,\n      limit: limit,\n    };\n    getProducts(body);\n  }, []);\n\n  const getProducts = body => {\n    axios.post('/api/product/products', body).then(response => {\n      if (response.data.success) {\n        console.log('데이터 로딩 성공');\n        if (body.loadMore) {\n          setProducts([...products, ...response.data.productInfo]);\n        } else {\n          setProducts(response.data.productInfo);\n        }\n        setPostSize(response.data.postSize);\n      } else {\n        alert('상품을 가져오는 것에 실패하였습니다.');\n      }\n    });\n  };\n\n  const loadMoreHandler = e => {\n    let moreSkip = skip + limit;\n\n    let body = {\n      skip: moreSkip,\n      limit: limit,\n      loadMore: true,\n    };\n    getProducts(body);\n    setSkip(moreSkip);\n  };\n\n  const renderCards = products.map((product, index) => {\n    // console.log('product:', product);\n\n    return (\n      <Col key={index} lg={6} md={8} xs={24} style={{ padding: '5px' }}>\n        <a href={`/product/${product._id}`}>\n          <Card\n            style={{ height: '100%' }}\n            cover={<ImageSlider images={product.images} />}\n          >\n            <Meta title={product.title} description={`$${product.price}`} />\n          </Card>\n        </a>\n      </Col>\n    );\n  });\n  const showFilteredResults = filter => {\n    // filter 는 {category : [id, id,,,]} 의 오브젝트로 들어옴\n    // 불러온 데이터에서 category 가 해당 id와 일치하는 데이터만 불러옴 (getProducts)\n\n    let body = {\n      skip: 0,\n      limit: limit,\n      loadMore: false,\n      filters: filter,\n    };\n    setSkip(0);\n    getProducts(body);\n  };\n\n  const handleFilters = (filter, category) => {\n    const newFilters = { ...filters };\n    console.log('newFilters', newFilters);\n    newFilters[category] = [...filter];\n    console.log('newFilters, price필터 추가', newFilters);\n\n    console.log('필터', filter);\n    console.log('뉴필터', newFilters);\n\n    showFilteredResults(newFilters);\n\n    setFilters(newFilters);\n  };\n\n  const doSearch = string => {\n    console.log('doSearch :', string);\n    const newSearchInput = string;\n    console.log('state) searchInput :', searchInput);\n    let body = {\n      skip: 0,\n      limit: limit,\n      filters: filters,\n      searchString: newSearchInput,\n    };\n    setSkip(0);\n    setSearchInput(newSearchInput);\n\n    getProducts(body);\n  };\n\n  return (\n    <div style={{ width: '75%', margin: '3rem auto' }}>\n      <div style={{ textAlign: 'center' }}>\n        <h2>\n          DAPANDA <RocketOutlined />\n        </h2>\n      </div>\n      {/* Filter */}\n      <Row gutter={[16, 16]}>\n        <Col lg={12} xs={24}>\n          <Checkbox\n            continents={continents}\n            handleFilters={filter => handleFilters(filter, 'continents')}\n          ></Checkbox>\n        </Col>\n        <Col lg={12} xs={24}>\n          <Radiobox\n            price={price}\n            handleFilters={filter => handleFilters(filter, 'price')}\n          ></Radiobox>\n        </Col>\n      </Row>\n\n      {/* Search */}\n\n      <Searchbox doSearch={string => doSearch(string)}></Searchbox>\n\n      {/* Cards */}\n      <Row gutter={(16, 16)}>{renderCards}</Row>\n\n      {postSize >= limit && (\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <button onClick={loadMoreHandler}>더보기</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default LandingPage;\n","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/UploadProductPage/UploadProductPage.js",["138"],"import React, { useState } from 'react';\nimport { Typography, Button, Form, Input, Select } from 'antd';\nimport FileUpload from '../../utils/FileUpload';\nimport axios from 'axios';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst Continents = [\n  { key: 1, value: 'Africa' },\n  { key: 2, value: 'Europe' },\n  { key: 3, value: 'Asia' },\n  { key: 4, value: 'North America' },\n  { key: 5, value: 'South America' },\n  { key: 6, value: 'Austrailia' },\n  { key: 7, value: 'Antarctica' },\n];\n\nfunction UploadProductPage({ user, history }) {\n  const [Title, setTitle] = useState('');\n  const [Description, setDescription] = useState('');\n  const [Price, setPrice] = useState(0);\n  const [Continent, setContinent] = useState(1);\n  const [Images, setImages] = useState([]);\n\n  const titleChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n  const descriptionChangeHandler = e => {\n    setDescription(e.currentTarget.value);\n  };\n  const priceChangeHandler = e => {\n    setPrice(e.currentTarget.value);\n  };\n  const continentChangeHandler = value => {\n    setContinent(value);\n  };\n\n  const submitHandler = e => {\n    if (!Title || !Description || !Price || !Continent || !Images) {\n      return alert(' 모든 칸에 입력을 해야합니다.');\n    }\n    const body = {\n      // 로그인 된 사람의 아이디\n      writer: user.userData._id,\n      title: Title,\n      description: Description,\n      price: Price,\n      images: Images,\n      continents: Continents,\n    };\n\n    axios.post('/api/product', body).then(response => {\n      console.log(response);\n\n      if (response.data.success) {\n        alert('상품 업로드 성공');\n        history.push('/');\n      } else {\n        alert('상품 업로드 ');\n      }\n    });\n  };\n  const updateImages = newImages => {\n    setImages(newImages);\n  };\n  return (\n    <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n        <h2> 여행 상품 업로드 </h2>\n      </div>\n\n      <Form onFinish={submitHandler}>\n        {/* {Drop Zone/} */}\n        <FileUpload refreshFunction={updateImages} />\n        <br />\n        <br />\n        <label>이름</label>\n        <Input onChange={titleChangeHandler} value={Title} />\n        <br />\n        <br />\n        <label>설명</label>\n        <TextArea onChange={descriptionChangeHandler} value={Description} />\n        <br />\n        <br />\n        <label>가격($)</label>\n        <Input type='number' onChange={priceChangeHandler} value={Price} />\n        <br />\n        <br />\n        <Select\n          style={{ width: 120 }}\n          onChange={continentChangeHandler}\n          value={Continent}\n        >\n          {Continents.map(item => (\n            <Option key={item.key} value={item.key}>\n              {item.value}\n            </Option>\n          ))}\n        </Select>\n        <br />\n        <br />\n        <Button htmlType='submit'>확인</Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default UploadProductPage;\n","/Users/kirok/projects/playground/react-shopping-apps/client/src/hoc/auth.js",["139"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/NavBar/NavBar.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/Footer/Footer.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/CartPage/CartPage.js",["140","141","142"],"import React, { useEffect, useState } from 'react';\nimport { Empty, Result, Button } from 'antd';\n\nimport { useDispatch } from 'react-redux';\nimport {\n  getCartItems,\n  removeCartItem,\n  onTransactionSuccess,\n} from '../../../_actions/user_actions';\nimport UserCartBlocks from './Sections/UserCartBlocks';\nimport Paypal from '../../utils/Paypal';\n\nfunction CartPage(props) {\n  const dispatch = useDispatch();\n  const [total, setTotal] = useState(0);\n  const [showTotal, setShowTotal] = useState(false);\n  const [showSuccess, setshowSuccess] = useState(false);\n\n  const removeItem = productId => {\n    console.log('remove', productId);\n    console.log(props.userData);\n\n    dispatch(removeCartItem(productId)).then(response => {\n      console.log('response', response);\n      if (response.payload.productInfo.length <= 0) {\n        setShowTotal(false);\n      }\n    });\n  };\n\n  const calculateTotal = cartDetail => {\n    let sum = 0;\n    cartDetail.map(product => {\n      sum += parseInt(product.price, 10) * product.quantity;\n    });\n    setTotal(sum);\n    setShowTotal(true);\n\n    return total;\n  };\n  const transactionSuccess = payment => {\n    dispatch(\n      onTransactionSuccess({\n        paymentData: payment,\n        cartDetail: props.user.cartDetail,\n      }),\n    ).then(response => {\n      if (response.payload.success) {\n        setShowTotal(false);\n        setshowSuccess(true);\n      }\n    });\n  };\n\n  useEffect(() => {\n    let cartItems = [];\n\n    // NOTE 1. 리덕스 user state안에 cart 안에 상품이 들어있는지 확인\n    if (props.user.userData && props.user.userData.cart) {\n      if (props.user.userData.cart.length > 0) {\n        props.user.userData.cart.forEach(item => {\n          cartItems.push(item.id);\n        });\n        console.log('cartItems', cartItems);\n        dispatch(getCartItems(cartItems, props.user.userData.cart)).then(\n          response => {\n            calculateTotal(response.payload);\n          },\n        );\n      }\n    }\n  }, [props.user.userData]);\n\n  return (\n    <div style={{ width: '85%', margin: '3rem auto' }}>\n      <h1>장바구니</h1>\n      <div>\n        <UserCartBlocks\n          products={props.user.cartDetail}\n          removeItem={removeItem}\n        />\n      </div>\n\n      {showTotal ? (\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <h1>총액 : $ {total}</h1>\n        </div>\n      ) : showSuccess ? (\n        <Result status='success' title='Successfully Purchased Items' />\n      ) : (\n        <Empty />\n      )}\n      {showTotal && <Paypal total={total} onSuccess={transactionSuccess} />}\n    </div>\n  );\n}\n\nexport default CartPage;\n","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/HistoryPage/HistoryPage.js",["143","144","145","146","147"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table, Tag, Space } from 'antd';\nimport HistoryTable from './Sections/HistoryTable';\n\nfunction HistoryPage(props) {\n  useEffect(() => {\n    props.user.userData &&\n      console.log('props.user.userData.history: ', props.user.userData.history);\n  });\n\n  return (\n    <div>\n      <HistoryTable\n        history={props.user.userData && props.user.userData.history}\n      />\n    </div>\n  );\n}\n\nexport default HistoryPage;\n","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/DetailProductPage/DetailProductPage.js",["148","149"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ImageGallery from 'react-image-gallery';\nimport { Row, Col, Descriptions, Badge, Button } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { addToCart } from '../../../_actions/user_actions';\n\nfunction DetailProductPage({ match }) {\n  const dispatch = useDispatch();\n\n  const [product, setProduct] = useState({});\n  const [images, setImages] = useState([]);\n\n  const productID = match.params.productID;\n\n  const onClickHandler = e => {\n    // Add to Cart 버튼을 클릭하면 필요한 정보를 user 데이터스키마에 전달 (cart와 histroy 필드)\n    // 상품 아이디, 갯수, 넣은 날짜\n    // user 스키마에 관련 된 것은 redux를 이용했기 때문에 이 부분도 redux로 처리\n    console.log(e);\n    console.log('product._id:', product._id);\n\n    // useDispatch로 액션을 실행하며 상품 아이디를 전달\n    dispatch(addToCart(product._id));\n  };\n\n  useEffect(() => {\n    axios\n      .get(`/api/product/products_by_id?id=${productID}&type=single`)\n      .then(response => {\n        setProduct(response.data[0]);\n        const newImage = response.data[0].images;\n        const imageList = newImage.map(image => {\n          const obj = {\n            original: image,\n            thumbnail: image,\n          };\n          return obj;\n        });\n        setImages(imageList);\n      })\n      .catch(err => alert(err));\n  }, []);\n\n  console.log('state:', images);\n\n  return (\n    <div style={{ width: '100%', padding: '3rem 4rem' }}>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <h1>{product.title}</h1>\n      </div>\n      <br />\n      <Row gutter={[16, 16]}>\n        <Col lg={12} sm={24}>\n          <ImageGallery items={images} />\n        </Col>\n        <Col lg={12} sm={24}>\n          <div>\n            <Descriptions title='상품 정보' bordered>\n              <Descriptions.Item label='Price'>\n                {`$ ${product.price}`}\n              </Descriptions.Item>\n              <Descriptions.Item label='Sold'>{product.sold}</Descriptions.Item>\n              <Descriptions.Item label='Views'>\n                {product.views}\n              </Descriptions.Item>\n              <Descriptions.Item label='Description'>\n                {product.description}\n              </Descriptions.Item>\n            </Descriptions>\n\n            <br />\n            <br />\n            <br />\n            <div>\n              <Button\n                type='danger'\n                shape='round'\n                size='large'\n                onClick={onClickHandler}\n              >\n                장바구니 담기\n              </Button>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default DetailProductPage;\n","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LandingPage/Sections/Searchbox.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LandingPage/Sections/Radiobox.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LandingPage/Sections/Checkbox.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/_reducers/user_reducer.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/LandingPage/Sections/Datas.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/_actions/user_actions.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/utils/ImageSlider.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/utils/FileUpload.js",["150","151"],"import React, { useEffect, useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { PlusOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nfunction FileUpload({ refreshFunction }) {\n  const [Images, setImages] = useState([]);\n\n  const dropHandler = files => {\n    let formData = new FormData();\n\n    const config = {\n      header: { 'content-type': 'multipart/form-data' },\n    };\n    formData.append('file', files[0]);\n    formData.append('upload_preset', 'fhjlucmt');\n\n    axios.post('/api/product/image', formData, config).then(response => {\n      if (response.data.success) {\n        const newImages = [...Images, response.data.filePath];\n        setImages(newImages);\n        refreshFunction(newImages);\n      } else {\n        alert('파일 저장 실패');\n      }\n    });\n  };\n\n  const onClickDelete = index => {\n    const newImages = [...Images];\n    newImages.splice(index, 1);\n    setImages(newImages);\n    refreshFunction(newImages);\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n      <Dropzone onDrop={dropHandler}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div\n              style={{\n                width: 300,\n                height: 240,\n                border: '1px solid lightgray',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n              {...getRootProps()}\n            >\n              <input {...getInputProps()} />\n              <div>\n                <PlusOutlined\n                  style={{ fontSize: '2.5rem', color: 'darkgray' }}\n                />\n              </div>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n\n      <div\n        style={{\n          display: 'flex',\n          width: '350px',\n          height: '240px',\n          overflowX: 'scroll',\n          overflowY: 'hidden',\n        }}\n      >\n        {Images.map((item, index) => (\n          <img\n            key={index}\n            style={{\n              minWidth: '300px',\n              width: '300px',\n              height: '240px',\n              margin: '0px 20px',\n            }}\n            src={item}\n            onClick={() => onClickDelete(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FileUpload;\n","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/utils/Paypal.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/NavBar/Sections/RightMenu.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/NavBar/Sections/LeftMenu.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/CartPage/Sections/UserCartBlocks.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/components/views/HistoryPage/Sections/HistoryTable.js",["152","153"],"import React from 'react';\nimport { Table, Tag, Space } from 'antd';\n\nfunction HistoryTable({ history }) {\n  const columns = [\n    {\n      title: 'Payment ID',\n      dataIndex: 'paymentId',\n      key: 'paymentId',\n    },\n    {\n      title: '상품 이름',\n      dataIndex: 'productName',\n      key: 'productName',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      key: 'quantity',\n    },\n    {\n      title: 'Date of Purchase',\n      dataIndex: 'purchaseDate',\n      key: 'purchaseDate',\n    },\n  ];\n\n  const data =\n    history &&\n    history.map((item, index) => {\n      return {\n        key: index,\n        paymentId: item.paymentId,\n        productName: item.name,\n        price: item.price,\n        quantity: item.quantity,\n        purchaseDate: item.dateOfPurchase,\n      };\n    });\n\n  return (\n    <div>\n      <h1\n        style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}\n      >\n        Payment History\n      </h1>\n      <div\n        style={{\n          margin: 'auto',\n          display: 'flex',\n          justifyContent: 'center',\n          width: '90%',\n        }}\n      >\n        <Table style={{ width: '100%' }} columns={columns} dataSource={data} />\n      </div>\n    </div>\n  );\n}\n\nexport default HistoryTable;\n","/Users/kirok/projects/playground/react-shopping-apps/client/src/components/Config.js",[],"/Users/kirok/projects/playground/react-shopping-apps/client/src/_actions/types.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":75,"column":11,"nodeType":"160","messageId":"161","endLine":75,"endColumn":16},{"ruleId":"158","severity":1,"message":"162","line":80,"column":11,"nodeType":"160","messageId":"161","endLine":80,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":84,"column":11,"nodeType":"160","messageId":"161","endLine":84,"endColumn":16},{"ruleId":"158","severity":1,"message":"162","line":89,"column":11,"nodeType":"160","messageId":"161","endLine":89,"endColumn":22},{"ruleId":"158","severity":1,"message":"163","line":3,"column":26,"nodeType":"160","messageId":"161","endLine":3,"endColumn":34},{"ruleId":"158","severity":1,"message":"164","line":16,"column":17,"nodeType":"160","messageId":"161","endLine":16,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":30,"column":6,"nodeType":"167","endLine":30,"endColumn":8,"suggestions":"168"},{"ruleId":"158","severity":1,"message":"169","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":6,"column":1,"nodeType":"172","endLine":42,"endColumn":2},{"ruleId":"158","severity":1,"message":"173","line":2,"column":25,"nodeType":"160","messageId":"161","endLine":2,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":33,"column":28,"nodeType":"176","messageId":"177","endLine":33,"endColumn":30},{"ruleId":"165","severity":1,"message":"178","line":72,"column":6,"nodeType":"167","endLine":72,"endColumn":27,"suggestions":"179"},{"ruleId":"158","severity":1,"message":"180","line":1,"column":28,"nodeType":"160","messageId":"161","endLine":1,"endColumn":36},{"ruleId":"158","severity":1,"message":"181","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":13},{"ruleId":"158","severity":1,"message":"182","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":15},{"ruleId":"158","severity":1,"message":"183","line":3,"column":17,"nodeType":"160","messageId":"161","endLine":3,"endColumn":20},{"ruleId":"158","severity":1,"message":"184","line":3,"column":22,"nodeType":"160","messageId":"161","endLine":3,"endColumn":27},{"ruleId":"158","severity":1,"message":"185","line":4,"column":34,"nodeType":"160","messageId":"161","endLine":4,"endColumn":39},{"ruleId":"165","severity":1,"message":"186","line":43,"column":6,"nodeType":"167","endLine":43,"endColumn":8,"suggestions":"187"},{"ruleId":"158","severity":1,"message":"188","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"190","line":73,"column":11,"nodeType":"191","endLine":83,"endColumn":13},{"ruleId":"158","severity":1,"message":"183","line":2,"column":17,"nodeType":"160","messageId":"161","endLine":2,"endColumn":20},{"ruleId":"158","severity":1,"message":"184","line":2,"column":22,"nodeType":"160","messageId":"161","endLine":2,"endColumn":27},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'dirty' is assigned a value but never used.","Identifier","unusedVar","'handleReset' is assigned a value but never used.","'Collapse' is defined but never used.","'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProducts', 'limit', and 'skip'. Either include them or remove the dependency array.","ArrayExpression",["194"],"'Typography' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'calculateTotal' and 'dispatch'. Either include them or remove the dependency array.",["195"],"'useState' is defined but never used.","'axios' is defined but never used.","'Table' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'productID'. Either include it or remove the dependency array.",["196"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [getProducts, limit, skip]",{"range":"203","text":"204"},"Update the dependencies array to be: [calculateTotal, dispatch, props.user.userData]",{"range":"205","text":"206"},"Update the dependencies array to be: [productID]",{"range":"207","text":"208"},[902,904],"[getProducts, limit, skip]",[1948,1969],"[calculateTotal, dispatch, props.user.userData]",[1311,1313],"[productID]"]