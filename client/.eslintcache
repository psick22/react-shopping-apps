[{"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\index.js":"1","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\serviceWorker.js":"2","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\App.js":"3","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_reducers\\index.js":"4","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"5","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"6","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\UploadProductPage\\UploadProductPage.js":"7","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"8","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\hoc\\auth.js":"9","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\NavBar.js":"10","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\Footer\\Footer.js":"11","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\DetailProductPage\\DetailProductPage.js":"12","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_reducers\\user_reducer.js":"13","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Radiobox.js":"14","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Checkbox.js":"15","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Searchbox.js":"16","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_actions\\user_actions.js":"17","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\utils\\ImageSlider.js":"18","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\utils\\FileUpload.js":"19","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Datas.js":"20","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"21","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"22","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\Config.js":"23","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_actions\\types.js":"24","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\CartPage\\CartPage.js":"25"},{"size":1187,"mtime":1596763589000,"results":"26","hashOfConfig":"27"},{"size":4951,"mtime":1596763589000,"results":"28","hashOfConfig":"27"},{"size":2124,"mtime":1610203662517,"results":"29","hashOfConfig":"27"},{"size":157,"mtime":1596763589000,"results":"30","hashOfConfig":"27"},{"size":6805,"mtime":1609852814607,"results":"31","hashOfConfig":"27"},{"size":5141,"mtime":1596763589000,"results":"32","hashOfConfig":"27"},{"size":3130,"mtime":1610023576538,"results":"33","hashOfConfig":"27"},{"size":4418,"mtime":1610186082072,"results":"34","hashOfConfig":"27"},{"size":1455,"mtime":1596763589000,"results":"35","hashOfConfig":"27"},{"size":1442,"mtime":1609850837970,"results":"36","hashOfConfig":"27"},{"size":576,"mtime":1609853246437,"results":"37","hashOfConfig":"27"},{"size":3190,"mtime":1610185215204,"results":"38","hashOfConfig":"27"},{"size":809,"mtime":1610210154750,"results":"39","hashOfConfig":"27"},{"size":1246,"mtime":1610109218670,"results":"40","hashOfConfig":"27"},{"size":1713,"mtime":1610110625942,"results":"41","hashOfConfig":"27"},{"size":959,"mtime":1610109218671,"results":"42","hashOfConfig":"27"},{"size":2149,"mtime":1610211417134,"results":"43","hashOfConfig":"27"},{"size":622,"mtime":1610023444091,"results":"44","hashOfConfig":"27"},{"size":2441,"mtime":1610023585684,"results":"45","hashOfConfig":"27"},{"size":734,"mtime":1610109218670,"results":"46","hashOfConfig":"27"},{"size":1709,"mtime":1610205123429,"results":"47","hashOfConfig":"27"},{"size":734,"mtime":1609851657015,"results":"48","hashOfConfig":"27"},{"size":57,"mtime":1596763589000,"results":"49","hashOfConfig":"27"},{"size":256,"mtime":1610207622250,"results":"50","hashOfConfig":"27"},{"size":791,"mtime":1610210805943,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"clb8se",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\index.js",[],["110","111"],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\serviceWorker.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\App.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_reducers\\index.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["112","113"],"import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Input, Button } from \"antd\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        lastName: \"\",\n        name: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().required(\"Name is required\"),\n        lastName: Yup.string().required(\"Last Name is required\"),\n        email: Yup.string()\n          .email(\"Email is invalid\")\n          .required(\"Email is required\"),\n        password: Yup.string()\n          .min(6, \"Password must be at least 6 characters\")\n          .required(\"Password is required\"),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n          .required(\"Confirm Password is required\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\n          };\n\n          dispatch(registerUser(dataToSubmit)).then((response) => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg);\n            }\n          });\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form\n              style={{ minWidth: \"375px\" }}\n              {...formItemLayout}\n              onSubmit={handleSubmit}\n            >\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Email\"\n                hasFeedback\n                validateStatus={\n                  errors.email && touched.email ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Password\"\n                hasFeedback\n                validateStatus={\n                  errors.password && touched.password ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button\n                  onClick={handleSubmit}\n                  type=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default RegisterPage;\n","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["114","115"],"import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\UploadProductPage\\UploadProductPage.js",["116"],"import React, { useState } from 'react';\r\nimport { Typography, Button, Form, Input, Select } from 'antd';\r\nimport FileUpload from '../../utils/FileUpload';\r\nimport axios from 'axios';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n  { key: 1, value: 'Africa' },\r\n  { key: 2, value: 'Europe' },\r\n  { key: 3, value: 'Asia' },\r\n  { key: 4, value: 'North America' },\r\n  { key: 5, value: 'South America' },\r\n  { key: 6, value: 'Austrailia' },\r\n  { key: 7, value: 'Antarctica' },\r\n];\r\n\r\nfunction UploadProductPage({ user, history }) {\r\n  const [Title, setTitle] = useState('');\r\n  const [Description, setDescription] = useState('');\r\n  const [Price, setPrice] = useState(0);\r\n  const [Continent, setContinent] = useState(1);\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const titleChangeHandler = e => {\r\n    setTitle(e.currentTarget.value);\r\n  };\r\n  const descriptionChangeHandler = e => {\r\n    setDescription(e.currentTarget.value);\r\n  };\r\n  const priceChangeHandler = e => {\r\n    setPrice(e.currentTarget.value);\r\n  };\r\n  const continentChangeHandler = value => {\r\n    setContinent(value);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    if (!Title || !Description || !Price || !Continent || !Images) {\r\n      return alert(' 모든 칸에 입력을 해야합니다.');\r\n    }\r\n    const body = {\r\n      // 로그인 된 사람의 아이디\r\n      writer: user.userData._id,\r\n      title: Title,\r\n      description: Description,\r\n      price: Price,\r\n      images: Images,\r\n      continents: Continents,\r\n    };\r\n\r\n    axios.post('/api/product', body).then(response => {\r\n      console.log(response);\r\n\r\n      if (response.data.success) {\r\n        alert('상품 업로드 성공');\r\n        history.push('/');\r\n      } else {\r\n        alert('상품 업로드 ');\r\n      }\r\n    });\r\n  };\r\n  const updateImages = newImages => {\r\n    setImages(newImages);\r\n  };\r\n  return (\r\n    <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <h2> 여행 상품 업로드 </h2>\r\n      </div>\r\n\r\n      <Form onFinish={submitHandler}>\r\n        {/* {Drop Zone/} */}\r\n        <FileUpload refreshFunction={updateImages} />\r\n        <br />\r\n        <br />\r\n        <label>이름</label>\r\n        <Input onChange={titleChangeHandler} value={Title} />\r\n        <br />\r\n        <br />\r\n        <label>설명</label>\r\n        <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n        <br />\r\n        <br />\r\n        <label>가격($)</label>\r\n        <Input type='number' onChange={priceChangeHandler} value={Price} />\r\n        <br />\r\n        <br />\r\n        <Select\r\n          style={{ width: 120 }}\r\n          onChange={continentChangeHandler}\r\n          value={Continent}\r\n        >\r\n          {Continents.map(item => (\r\n            <Option key={item.key} value={item.key}>\r\n              {item.value}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n        <br />\r\n        <br />\r\n        <Button htmlType='submit'>확인</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadProductPage;\r\n","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["117","118","119"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Card, Row, Collapse } from 'antd';\r\nimport { RocketOutlined } from '@ant-design/icons';\r\nimport ImageSlider from '../../utils/ImageSlider';\r\nimport Checkbox from './Sections/Checkbox.js';\r\nimport Radiobox from './Sections/Radiobox.js';\r\nimport Searchbox from './Sections/Searchbox.js';\r\nimport { continents, price } from './Sections/Datas';\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction LandingPage() {\r\n  const [products, setProducts] = useState([]);\r\n  const [skip, setSkip] = useState(0);\r\n  const [limit, setLimit] = useState(8);\r\n  const [postSize, setPostSize] = useState(0);\r\n  const [filters, setFilters] = useState({\r\n    continents: [],\r\n    price: [],\r\n  });\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    let body = {\r\n      skip: skip,\r\n      limit: limit,\r\n    };\r\n    getProducts(body);\r\n  }, []);\r\n\r\n  const getProducts = body => {\r\n    axios.post('/api/product/products', body).then(response => {\r\n      if (response.data.success) {\r\n        console.log('데이터 로딩 성공');\r\n        if (body.loadMore) {\r\n          setProducts([...products, ...response.data.productInfo]);\r\n        } else {\r\n          setProducts(response.data.productInfo);\r\n        }\r\n        setPostSize(response.data.postSize);\r\n      } else {\r\n        alert('상품을 가져오는 것에 실패하였습니다.');\r\n      }\r\n    });\r\n  };\r\n\r\n  const loadMoreHandler = e => {\r\n    let moreSkip = skip + limit;\r\n\r\n    let body = {\r\n      skip: moreSkip,\r\n      limit: limit,\r\n      loadMore: true,\r\n    };\r\n    getProducts(body);\r\n    setSkip(moreSkip);\r\n  };\r\n\r\n  const renderCards = products.map((product, index) => {\r\n    // console.log('product:', product);\r\n\r\n    return (\r\n      <Col key={index} lg={6} md={8} xs={24} style={{ padding: '5px' }}>\r\n        <a href={`/product/${product._id}`}>\r\n          <Card\r\n            style={{ height: '100%' }}\r\n            cover={<ImageSlider images={product.images} />}\r\n          >\r\n            <Meta title={product.title} description={`$${product.price}`} />\r\n          </Card>\r\n        </a>\r\n      </Col>\r\n    );\r\n  });\r\n  const showFilteredResults = filter => {\r\n    // filter 는 {category : [id, id,,,]} 의 오브젝트로 들어옴\r\n    // 불러온 데이터에서 category 가 해당 id와 일치하는 데이터만 불러옴 (getProducts)\r\n\r\n    let body = {\r\n      skip: 0,\r\n      limit: limit,\r\n      loadMore: false,\r\n      filters: filter,\r\n    };\r\n    setSkip(0);\r\n    getProducts(body);\r\n  };\r\n\r\n  const handleFilters = (filter, category) => {\r\n    const newFilters = { ...filters };\r\n    console.log('newFilters', newFilters);\r\n    newFilters[category] = [...filter];\r\n    console.log('newFilters, price필터 추가', newFilters);\r\n\r\n    console.log('필터', filter);\r\n    console.log('뉴필터', newFilters);\r\n\r\n    showFilteredResults(newFilters);\r\n\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  const doSearch = string => {\r\n    console.log('doSearch :', string);\r\n    const newSearchInput = string;\r\n    console.log('state) searchInput :', searchInput);\r\n    let body = {\r\n      skip: 0,\r\n      limit: limit,\r\n      filters: filters,\r\n      searchString: newSearchInput,\r\n    };\r\n    setSkip(0);\r\n    setSearchInput(newSearchInput);\r\n\r\n    getProducts(body);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '75%', margin: '3rem auto' }}>\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h2>\r\n          DAPANDA <RocketOutlined />\r\n        </h2>\r\n      </div>\r\n      {/* Filter */}\r\n      <Row gutter={[16, 16]}>\r\n        <Col lg={12} xs={24}>\r\n          <Checkbox\r\n            continents={continents}\r\n            handleFilters={filter => handleFilters(filter, 'continents')}\r\n          ></Checkbox>\r\n        </Col>\r\n        <Col lg={12} xs={24}>\r\n          <Radiobox\r\n            price={price}\r\n            handleFilters={filter => handleFilters(filter, 'price')}\r\n          ></Radiobox>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Search */}\r\n\r\n      <Searchbox doSearch={string => doSearch(string)}></Searchbox>\r\n\r\n      {/* Cards */}\r\n      <Row gutter={(16, 16)}>{renderCards}</Row>\r\n\r\n      {postSize >= limit && (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <button onClick={loadMoreHandler}>더보기</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\hoc\\auth.js",["120"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\Footer\\Footer.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\DetailProductPage\\DetailProductPage.js",["121","122"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport { Row, Col, Descriptions, Badge, Button } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../../_actions/user_actions';\r\n\r\nfunction DetailProductPage({ match }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [product, setProduct] = useState({});\r\n  const [images, setImages] = useState([]);\r\n\r\n  const productID = match.params.productID;\r\n\r\n  const onClickHandler = e => {\r\n    // Add to Cart 버튼을 클릭하면 필요한 정보를 user 데이터스키마에 전달 (cart와 histroy 필드)\r\n    // 상품 아이디, 갯수, 넣은 날짜\r\n    // user 스키마에 관련 된 것은 redux를 이용했기 때문에 이 부분도 redux로 처리\r\n    console.log(e);\r\n    console.log('product._id:', product._id);\r\n\r\n    // useDispatch로 액션을 실행하며 상품 아이디를 전달\r\n    dispatch(addToCart(product._id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/product/products_by_id?id=${productID}&type=single`)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          console.log(\r\n            '상세 정보 가져오기 성공 - product[0] :',\r\n            response.data.product[0],\r\n          );\r\n          setProduct(response.data.product[0]);\r\n          const newImage = response.data.product[0].images;\r\n          const imageList = newImage.map(image => {\r\n            const obj = {\r\n              original: image,\r\n              thumbnail: image,\r\n            };\r\n            return obj;\r\n          });\r\n          setImages(imageList);\r\n        } else {\r\n          alert('상세 정보 가져오기를 실패하였습니다.');\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  console.log('state:', images);\r\n\r\n  return (\r\n    <div style={{ width: '100%', padding: '3rem 4rem' }}>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <h1>{product.title}</h1>\r\n      </div>\r\n      <br />\r\n      <Row gutter={[16, 16]}>\r\n        <Col lg={12} sm={24}>\r\n          <ImageGallery items={images} />\r\n        </Col>\r\n        <Col lg={12} sm={24}>\r\n          <div>\r\n            <Descriptions title='상품 정보' bordered>\r\n              <Descriptions.Item label='Price'>\r\n                {`$ ${product.price}`}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Sold'>{product.sold}</Descriptions.Item>\r\n              <Descriptions.Item label='Views'>\r\n                {product.views}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Description'>\r\n                {product.description}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <Button\r\n                type='danger'\r\n                shape='round'\r\n                size='large'\r\n                onClick={onClickHandler}\r\n              >\r\n                장바구니 담기\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailProductPage;\r\n","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Radiobox.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Checkbox.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Searchbox.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\utils\\ImageSlider.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\utils\\FileUpload.js",["123","124"],"import React, { useEffect, useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nfunction FileUpload({ refreshFunction }) {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const dropHandler = files => {\r\n    let formData = new FormData();\r\n\r\n    const config = {\r\n      header: { 'content-type': 'multipart/form-data' },\r\n    };\r\n    formData.append('file', files[0]);\r\n    formData.append('upload_preset', 'fhjlucmt');\r\n\r\n    axios.post('/api/product/image', formData, config).then(response => {\r\n      if (response.data.success) {\r\n        const newImages = [...Images, response.data.filePath];\r\n        setImages(newImages);\r\n        refreshFunction(newImages);\r\n      } else {\r\n        alert('파일 저장 실패');\r\n      }\r\n    });\r\n  };\r\n\r\n  const onClickDelete = index => {\r\n    const newImages = [...Images];\r\n    newImages.splice(index, 1);\r\n    setImages(newImages);\r\n    refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n      <Dropzone onDrop={dropHandler}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section>\r\n            <div\r\n              style={{\r\n                width: 300,\r\n                height: 240,\r\n                border: '1px solid lightgray',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n              {...getRootProps()}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <div>\r\n                <PlusOutlined\r\n                  style={{ fontSize: '2.5rem', color: 'darkgray' }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          width: '350px',\r\n          height: '240px',\r\n          overflowX: 'scroll',\r\n          overflowY: 'hidden',\r\n        }}\r\n      >\r\n        {Images.map((item, index) => (\r\n          <img\r\n            key={index}\r\n            style={{\r\n              minWidth: '300px',\r\n              width: '300px',\r\n              height: '240px',\r\n              margin: '0px 20px',\r\n            }}\r\n            src={item}\r\n            onClick={() => onClickDelete(index)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\LandingPage\\Sections\\Datas.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\Config.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\_actions\\types.js",[],"C:\\Users\\kgiro\\Projects\\React-study\\react-shopping-apps\\client\\src\\components\\views\\CartPage\\CartPage.js",["125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":84,"column":11,"nodeType":"132","messageId":"133","endLine":84,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":89,"column":11,"nodeType":"132","messageId":"133","endLine":89,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":75,"column":11,"nodeType":"132","messageId":"133","endLine":75,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":80,"column":11,"nodeType":"132","messageId":"133","endLine":80,"endColumn":22},{"ruleId":"130","severity":1,"message":"135","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":20},{"ruleId":"130","severity":1,"message":"136","line":3,"column":26,"nodeType":"132","messageId":"133","endLine":3,"endColumn":34},{"ruleId":"130","severity":1,"message":"137","line":16,"column":17,"nodeType":"132","messageId":"133","endLine":16,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":30,"column":6,"nodeType":"140","endLine":30,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":6,"column":1,"nodeType":"144","endLine":42,"endColumn":2},{"ruleId":"130","severity":1,"message":"145","line":4,"column":34,"nodeType":"132","messageId":"133","endLine":4,"endColumn":39},{"ruleId":"138","severity":1,"message":"146","line":50,"column":6,"nodeType":"140","endLine":50,"endColumn":8,"suggestions":"147"},{"ruleId":"130","severity":1,"message":"148","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"150","line":73,"column":11,"nodeType":"151","endLine":83,"endColumn":13},{"ruleId":"138","severity":1,"message":"152","line":21,"column":6,"nodeType":"140","endLine":21,"endColumn":27,"suggestions":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'dirty' is assigned a value but never used.","Identifier","unusedVar","'handleReset' is assigned a value but never used.","'Typography' is defined but never used.","'Collapse' is defined but never used.","'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProducts', 'limit', and 'skip'. Either include them or remove the dependency array.","ArrayExpression",["156"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'productID'. Either include it or remove the dependency array.",["157"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [getProducts, limit, skip]",{"range":"165","text":"166"},"Update the dependencies array to be: [productID]",{"range":"167","text":"168"},"Update the dependencies array to be: [dispatch, props.user.userData]",{"range":"169","text":"170"},[931,933],"[getProducts, limit, skip]",[1587,1589],"[productID]",[668,689],"[dispatch, props.user.userData]"]